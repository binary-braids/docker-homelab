name: monitoring

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /docker/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=7d'
    configs:
    - source: prometheus.yml
      target: /etc/prometheus/prometheus.yml
    - source: rules.yml
      target: /etc/prometheus/rules.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.binarybraids.com`)"
      - "traefik.http.routers.prometheus.entrypoints=https"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=proxy"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /docker/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    configs:
    - source: alertmanager.yml
      target: /etc/alertmanager/alertmanager.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.binarybraids.com`)"
      - "traefik.http.routers.alertmanager.entrypoints=https"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.routers.alertmanager.service=alertmanager"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.docker.network=proxy"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - grafana:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.binarybraids.com`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"

  pve-exporter:
    image: prompve/prometheus-pve-exporter:latest
    container_name: pve-exporter
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /docker/pve-exporter:/etc/prometheus/  
    configs:
    - source: pve.yml
      target: /etc/prometheus/pve.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pve-exporter.rule=Host(`pve-exporter.binarybraids.com`)"
      - "traefik.http.routers.pve-exporter.entrypoints=https"
      - "traefik.http.routers.pve-exporter.tls=true"
      - "traefik.http.routers.pve-exporter.service=pve-exporter"
      - "traefik.http.services.pve-exporter.loadbalancer.server.port=9221"
      - "traefik.docker.network=proxy"      

configs:
  prometheus.yml:
    content: |
      global:
        scrape_interval: 5m

      rule_files:
        - "rules.yml"

      alerting:
        alertmanagers:
        - static_configs:
          - targets:
            - alertmanager.binarybraids.com

      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['prometheus.binarybraids.com']
        - job_name: 'pve'
          static_configs:
          - targets:
            - prod-host-01.binarybraids.com
            - prod-host-02.binarybraids.com 
          metrics_path: /pve
          params:
            module: [default]
          relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: pve-exporter.binarybraids.com
        - job_name: 'windows'
          static_configs:
          - targets:
            - vm-prod-dc-01.ad.binarybraids.com:9182
            - vm-prod-dc-02.ad.binarybraids.com:9182
            - vm-prod-bkp-01.ad.binarybraids.com:9182
          relabel_configs:
          - source_labels: [__address__]
            regex: ([^:]+):\d+
            target_label: instance
            replacement: ${1}
  rules.yml:
    content: |
      groups:
      - name: instance_down
        rules:
        - alert: InstanceDown
          expr: up == 0
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "Instance {{ $labels.instance }} down"
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes."  
      - name: windows
        rules:
        - alert: WindowsServerCpuUsage
          expr: 100 - (avg by (instance) (rate(windows_cpu_time_total{mode="idle"}[2m])) * 100) > 80
          for: 0m
          labels:
            severity: warning
          annotations:
            summary: "Windows Server CPU Usage (instance {{ $labels.instance }})"
            description: "CPU Usage is more than 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
        - alert: WindowsServerMemoryUsage
          expr: 100 - ((windows_os_physical_memory_free_bytes / windows_cs_physical_memory_bytes) * 100) > 90
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "Windows Server memory Usage (instance {{ $labels.instance }})"
            description: "Memory usage is more than 90%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
        - alert: WindowsServerDiskSpaceUsage
          expr: 100.0 - 100 * ((windows_logical_disk_free_bytes / 1024 / 1024 ) / (windows_logical_disk_size_bytes / 1024 / 1024)) > 80
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: "Windows Server disk Space Usage (instance {{ $labels.instance }})"
            description: "Disk usage is more than 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


  alertmanager.yml:
    content: |
        global:
          resolve_timeout: 5m
        route:
          receiver: "null"
          group_by:
          - job
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
        receivers:
        - name: "null"
  pve.yml:
    content: |
      default:
          user: monitor@pve
          password: "${PROXMOX_EXPORTER_PASSWORD}"

networks:
  proxy:
    external: true

volumes:
  grafana: