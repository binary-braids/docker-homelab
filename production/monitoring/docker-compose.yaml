name: monitoring

services:

  prometheus:
    image: prom/prometheus:latest@sha256:f6639335d34a77d9d9db382b92eeb7fc00934be8eae81dbc03b31cfe90411a94
    container_name: prometheus
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /docker/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=7d'
    configs:
    - source: prometheus.yml
      target: /etc/prometheus/prometheus.yml
    - source: rules.yml
      target: /etc/prometheus/rules.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.binarybraids.com`)"
      - "traefik.http.routers.prometheus.entrypoints=https"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=proxy"

  alertmanager:
    image: prom/alertmanager:latest@sha256:e13b6ed5cb929eeaee733479dce55e10eb3bc2e9c4586c705a4e8da41e5eacf5
    container_name: alertmanager
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /docker/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    configs:
    - source: alertmanager.yml
      target: /etc/alertmanager/alertmanager.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.binarybraids.com`)"
      - "traefik.http.routers.alertmanager.entrypoints=https"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.routers.alertmanager.service=alertmanager"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.docker.network=proxy"

  grafana:
    image: grafana/grafana:latest@sha256:408afb9726de5122b00a2576763a8a57a3c86d5b0eff5305bc994ceb3eb96c3f
    container_name: grafana
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - grafana:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.binarybraids.com`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"

  pve-exporter:
    image: prompve/prometheus-pve-exporter:latest@sha256:7facf49c2756f2ea91b2ffdbca5b9f99e3daf351599585385af09d8d2539660a
    container_name: pve-exporter
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /docker/pve-exporter:/etc/prometheus/  
    configs:
    - source: pve.yml
      target: /etc/prometheus/pve.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pve-exporter.rule=Host(`pve-exporter.binarybraids.com`)"
      - "traefik.http.routers.pve-exporter.entrypoints=https"
      - "traefik.http.routers.pve-exporter.tls=true"
      - "traefik.http.routers.pve-exporter.service=pve-exporter"
      - "traefik.http.services.pve-exporter.loadbalancer.server.port=9221"
      - "traefik.docker.network=proxy"      

configs:
  prometheus.yml:
    content: |
      global:
        scrape_interval: 5m

      rule_files:
        - "rules.yml"

      alerting:
        alertmanagers:
        - static_configs:
          - targets:
            - alertmanager.binarybraids.com

      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['prometheus.binarybraids.com']

        - job_name: 'pve'
          static_configs:
          - targets:
            - prod-host-01.binarybraids.com
            - prod-host-02.binarybraids.com 
          metrics_path: /pve
          params:
            module: [default]
          relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: pve-exporter.binarybraids.com

        - job_name: 'windows'
          static_configs:
          - targets:
            - vm-prod-dc-01.ad.binarybraids.com:9182
            - vm-prod-dc-02.ad.binarybraids.com:9182
            - vm-prod-bkp-01.ad.binarybraids.com:9182
          relabel_configs:
          - source_labels: [__address__]
            target_label: instance
            regex: "([^:]+).*"
            replacement: '$${1}'

        - job_name: 'linux'
          static_configs:
          - targets:
            - vm-prod-kube-01.ad.binarybraids.com:9100
            - vm-prod-kube-02.ad.binarybraids.com:9100
            - vm-prod-kube-03.ad.binarybraids.com:9100
            - vm-prod-dkr-01.ad.binarybraids.com:9100
            - vm-prod-fs-01.ad.binarybraids.com:9100
          relabel_configs:
          - source_labels: [__address__]
            target_label: instance
            regex: "([^:]+).*"
            replacement: '$${1}'

  rules.yml:
    content: |
      groups:
      - name: instance_down
        rules:
        - alert: InstanceDown
          expr: up == 0
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "Instance {{ $$labels.instance }} down"
            description: "{{ $labels.instance }} of job {{ $$labels.job }} has been down for more than 5 minutes."

      - name: prometheus
        rules:
        - alert: PrometheusJobMissing
          expr: absent(up{job="prometheus"})
          for: 0m
          labels:
            severity: warning
          annotations:
            summary: Prometheus job missing (instance {{ $$labels.instance }})
            description: "A Prometheus job has disappeared\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"
        - alert: PrometheusTargetMissing
          expr: up == 0
          for: 0m
          labels:
            severity: critical
          annotations:
            summary: Prometheus target missing (instance {{ $$labels.instance }})
            description: "A Prometheus target has disappeared. An exporter might be crashed.\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"
        - alert: PrometheusAllTargetsMissing
          expr: sum by (job) (up) == 0
          for: 0m
          labels:
            severity: critical
          annotations:
            summary: Prometheus all targets missing (instance {{ $$labels.instance }})
            description: "A Prometheus job does not have living target anymore.\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"
                  
      - name: windows
        rules:
        - alert: WindowsServerCpuUsage
          expr: 100 - (avg by (instance) (rate(windows_cpu_time_total{mode="idle"}[2m])) * 100) > 90
          for: 0m
          labels:
            severity: warning
          annotations:
            summary: "Windows Server CPU Usage (instance {{ $$labels.instance }})"
            description: "CPU Usage is more than 90%\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"
        - alert: WindowsServerMemoryUsage
          expr: 100 - ((windows_os_physical_memory_free_bytes / windows_cs_physical_memory_bytes) * 100) > 90
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "Windows Server memory Usage (instance {{ $$labels.instance }})"
            description: "Memory usage is more than 90%\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"
        - alert: WindowsServerDiskSpaceUsage
          expr: 100.0 - 100 * ((windows_logical_disk_free_bytes / 1024 / 1024 ) / (windows_logical_disk_size_bytes / 1024 / 1024)) > 90
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: "Windows Server disk Space Usage (instance {{ $$labels.instance }})"
            description: "Disk usage is more than 90%\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"

      - name: linux
        rules:
        - alert: HostHighCpuLoad
          expr: (sum by (instance) (avg by (mode, instance) (rate(node_cpu_seconds_total{mode!="idle"}[2m]))) > 0.9) * on(instance) group_left (nodename) node_uname_info{nodename=~".+"}
          for: 10m
          labels:
            severity: warning
          annotations:
            summary: Host high CPU load (instance {{ $$labels.instance }})
            description: "CPU load is > 90%\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"
        - alert: HostOutOfMemory
          expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10) * on(instance) group_left (nodename) node_uname_info{nodename=~".+"}
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Host out of memory (instance {{ $$labels.instance }})
            description: "Node memory is filling up (< 10% left)\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"
        - alert: HostOutOfDiskSpace
          expr: ((node_filesystem_avail_bytes{fstype!="cifs"} * 100) / node_filesystem_size_bytes{fstype!="cifs"} < 10 and node_filesystem_readonly{fstype!="cifs"} == 0) * on(instance) group_left (nodename) node_uname_info{nodename=~".+"}
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: Host out of disk space (instance {{ $$labels.instance }})
            description: "Disk is almost full (< 10% left)\n  VALUE = {{ $$value }}\n  LABELS = {{ $$labels }}"

  alertmanager.yml:
    content: |
        global:
          resolve_timeout: 5m
        route:
          receiver: "discord"
          group_by: ['alertname', 'job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h

        receivers:
        - name: "discord"
          discord_configs:
          - webhook_url: ${ALERTMANAGER_WEBHOOK_URI}

  pve.yml:
    content: |
      default:
          user: monitor@pve
          password: "${PROXMOX_EXPORTER_PASSWORD}"

networks:
  proxy:
    external: true

volumes:
  grafana: